% Sweave(file = "./vcf2R.Rnw", driver = cacheSweaveDriver )
\documentclass[10pt]{article}
<<echo=FALSE>>=
  options(width=70, continue = " ")
@ 
\SweaveOpts{eps=FALSE,echo=TRUE,figs.only=TRUE,keep.source=FALSE, prefix.string=figures/vcf2R}
\usepackage{fullpage}
\usepackage{times}
\usepackage[colorlinks=TRUE,urlcolor=blue,citecolor=blue]{hyperref}
%\title{CQN (Conditional Quantile Normalization)}
%\author{Kasper Daniel Hansen \\ \texttt{khansen@jhsph.edu}
%\and
%Zhijin Wu \\ \texttt{zhijin\_wu@brown.edu}}
%\date{Modified: April 29, 2012.  Compiled: \today}
%\input{/home/bst/student/syounkin/jhsph/latex/sgy}
\input{/home/sgy/jhsph/latex/sgy}
\begin{document}
\setlength{\parskip}{0.2\baselineskip}
\setlength{\parindent}{0pt}
%\maketitle
Today is \today.
%<<cachedir, echo=FALSE>>=
%setCacheDir( path = './cache/' )
%@ 
<<packages, cache = FALSE>>=
rm(list=ls())
library("vcf2R")
library("GenomicRanges")
library("BSgenome.Hsapiens.UCSC.hg19")
library("Gviz")
@ 
\section{Targeted Loci}
<<pos, cache = TRUE>>=
file <- system.file( "extdata", "snvs.fixed_header.frq", package = "vcf2R")
pos.df <- frq2pos( file )
head(pos.df)
@ 
<<loci>>=
with( pos.df, table(chr) )
pos.gr <- with( pos.df, GRanges( seqnames = paste("chr", chr, sep = ""), ranges = IRanges( start = pos, end = pos ), strand = "*" ) )
seqlengths(pos.gr) <- seqlengths(Hsapiens)[levels(seqnames(pos.gr))]
start(pos.gr) <- start(pos.gr) - 10e3
end(pos.gr) <- end(pos.gr) + 10e3
loci <- reduce(pos.gr)
start(loci) <- start(loci) + 10e3
end(loci) <- end(loci) - 10e3
@ 
\newpage
<<width>>=
val <- data.frame( n.snps = countOverlaps(loci, pos.gr), kb = width(loci)/1e3 )
values(loci) <- val
names(loci) <- c("PAX7", "ABCA4", "IRF6", "VAX1", "FGFR2", "BMP4", "NTN1", "NOG", "MAFB", "MSX1", "8q24", "PTCH1", "FOXE1")
loci
sum(width(loci))/1e6
with( values(loci), sum(n.snps) )
@ 
<<targets>>=
data("targets.hg19")
targets.hg19.gr
@ 
\section{Regions}


<<kg, cache = TRUE>>=
data(kg.hg19)
kg.gr <- GRanges( seqnames = kg.hg19$chr, ranges = IRanges( start = kg.hg19$start, end = kg.hg19$end ), strand = kg.hg19$strand, exon = as.factor(kg.hg19$exon), gene = as.factor(gene <- substr( kg.hg19$exon, 1, 8)), feature = as.factor(gene), transcript = as.factor(gene), symbol = as.factor(gene), id = as.factor(gene) )
@ 

<<track1, eval = FALSE>>=
ht <- 4; wd <- ht*1.618;
for( locus in names(loci) ){
  gr <- targets.hg19.gr[names(targets.hg19.gr)==locus,]
  chr <- as.character(unique(seqnames(gr)))
  seqlengths(gr) <- seqlengths(Hsapiens)[levels(seqnames(gr))]
  atrack <- AnnotationTrack(gr, name=paste0(locus, " Target"), chromosome = chr, genome = "hg19", stacking = "squish")
  atrack2 <- AnnotationTrack(loci[names(loci)==locus,], chromosome = chr, genome = "hg19", name=paste0(locus, " Actual"), stacking = "squish")
  gtrack <- GenomeAxisTrack()
  itrack <- IdeogramTrack(genome="hg19", chromosome=chr)
  kg.sub.gr <- kg.gr[subjectHits(findOverlaps( loci[names(loci)==locus,], kg.gr )),]
  if( length(kg.sub.gr) != 0 ){
    grtrack <- GeneRegionTrack(range = kg.sub.gr, genome="hg19", chromosome=as.character(seqnames(loci)[which(names(loci)==locus)]), name="Known Genes" )

    pdf( file = paste0( "./figures/loci/", locus, ".pdf" ), height = ht, width = wd )
    plotTracks(list(atrack2,atrack,grtrack,gtrack,itrack), add = FALSE, main = locus)
    dev.off()
  }else{
    pdf( file = paste0( "./figures/loci/", locus, ".pdf" ), height = ht, width = wd )
    plotTracks(list(atrack2,atrack,gtrack,itrack), add = FALSE, main = locus)
    dev.off()
  }

}
@ 
\begin{figure}
\includegraphics{./figures/loci/FOXE1}
\end{figure}
\begin{figure}
\includegraphics{./figures/loci/IRF6}
\end{figure}
\begin{figure}
\includegraphics{./figures/loci/8q24}
\end{figure}
\begin{figure}
\includegraphics{./figures/loci/BMP4}
\end{figure}
\section{Hardy-Weinberg Equilibrium}
<<hwe2R, cache = TRUE>>=
file <- system.file( "extdata", "snvs.fixed_header.hwe", package = "vcf2R")
hwe.df <- hwe2R( file = file )
head(hwe.df)
@
\section{Minor Allele Frequencies}
<<>>=
file <- system.file( "extdata", "8q24-parents.frq", package = "vcf2R")
maf.di <- frq2R( file = file )
@ 
\end{document}
